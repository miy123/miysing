// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using miysing.Models;

namespace miysing.Migrations
{
    [DbContext(typeof(MiySongDbContext))]
    [Migration("20181107015708_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("miysing.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descrption");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("miysing.Models.SongRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Listener");

                    b.Property<int>("SongId");

                    b.Property<string>("SongUrl");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.ToTable("SongRecords");
                });

            modelBuilder.Entity("miysing.Models.SongRecord", b =>
                {
                    b.HasOne("miysing.Models.Song", "Song")
                        .WithMany("SongRecords")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
